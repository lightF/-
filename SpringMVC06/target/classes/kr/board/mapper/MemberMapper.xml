<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.board.mapper.MemberMapper">

<!-- collection은 array 리스트로 뿌려야하기 때문에 collection으로 선언한다. -->
<resultMap type="kr.board.entity.Member" id="memberMap">
		<id property="memIdx" column="memIdx"/>
		<result property="memID" column="memID"/>
		<result property="memPassword" column="memPassword"/>
		<result property="memName" column="memName"/>
		<result property="memAge" column="memAge"/>
		<result property="memGender" column="memGender"/>
		<result property="memEmail" column="memEmail"/>
		<result property="memProfile" column="memProfile"/>
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>

<!-- resultmap에 authMap을 참조하겟다. id임의로 authmap참조 -->
<resultMap type="kr.board.entity.AuthVO" id="authMap">
	<id property="no" column="no" />
	<result property="memID" column="memID"/>
	<result property="auth" column="auth"/>
</resultMap>

<select id="registerCheck" resultType="kr.board.entity.Member">
		select * from mem_stbl where memID=#{memID}
<!-- 선택한 ID가 같은게 있는지 없는지 출력 NULL 인지 아닌지 -->
</select>
<insert id="register" parameterType="kr.board.entity.Member">
		insert into
			mem_stbl(memIdx,memID,memPassword,memName,memAge,memGender,memEmail,memProfile)
			values((select IFNULL(MAX(memIdx)+1,1) from mem_stbl mem),#{memID},#{memPassword},#{memName},#{memAge},#{memGender},#{memEmail},#{memProfile})
</insert>
	
<select id="memLogin" resultMap="memberMap">
       select * from mem_stbl mem LEFT OUTER JOIN mem_auth auth on
       mem.memID=auth.memID where mem.memID=#{username}
</select>
	
 <update id="memUpdate" parameterType="kr.board.entity.Member">
     update mem_stbl set memPassword=#{memPassword}, memName=#{memName}, 
            memAge=#{memAge},memGender=#{memGender},memEmail=#{memEmail} 
            where memID=#{memID}      
  </update>
<!-- 수정(회원정보,권한정보 join)를 가져온다. -->
<!-- resultMap  -->
<!-- 2개의 TABLE을 JOIN한다. -->
<!-- join을해서 가져와야한다. -->
<select id="getMember" resultMap="memberMap">
	select * from mem_stbl mem LEFT OUTER JOIN mem_auth auth on 
	mem.memID=auth.memID where mem.memID=#{memID}
</select>

<update id="memProfileUpdate" parameterType="kr.board.entity.Member">
	update mem_stbl set memProfile=#{memProfile} where memID=#{memID}
</update>

<insert id="authInsert" parameterType="kr.board.entity.AuthVO">
	INSERT INTO mem_auth(memID, auth) values(#{memID}, #{auth})
</insert>

<delete id="authDelete">
	delete from mem_auth where memID=#{memID}
</delete>

</mapper>
